{"version":3,"sources":["reportWebVitals.js","core/config.js","services/todoManager.js","core/actions.js","core/seed.js","core/context.js","services/taskManager.js","components/taskpane/task.js","components/taskpane/taskList.js","components/taskpane/index.js","components/todopane/addTodo.js","components/todopane/editButton.js","components/todopane/actionButton.js","components/todopane/clearButton.js","components/todopane/filterButton.js","components/todopane/filterBar.js","components/todopane/todoInput.js","components/todopane/todo.js","components/todopane/todoList.js","components/todopane/toggletodo.js","components/todopane/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","refreshIDLength","idlength","tickerdelay","milliseconds","Filters","all","active","todo","completed","getTodoCount","todos","filter","length","TodoManager","addTodo","text","concat","id","rndString","getTodo","toggleTodo","data","map","removeTodo","current","toggleAllTodo","isComplete","clearButton","getNoCompletedCount","filterTodos","hasNoTodos","getCompletedCount","editTodo","editing","actions","updateInputValue","dummy","input","state","context","setFilter","setEditing","addTask","task","tasks","TaskManager","removeTask","addTaskToTodo","seed","refreshID","getTask","Task","init","AddButton","onClick","className","TaskList","TaskPane","AddTodo","disabled","EditButton","ActionButton","ClearButton","FilterButton","filters","FilterBar","actionKeys","Enter","Escape","TodoInput","value","onChange","evt","target","onKeyUp","code","sharedStyle","height","completedStyle","color","activeStyle","Todo","style","type","checked","TodoList","filteredTodos","Toggletodo","isChecked","TodoPane","App","useEffect","Entry","useState","setState","updateContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1d0fee9.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n\tif(onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","const milliseconds = 1000;\nconst seconds = 5;\n\nconst config = {\n\trefreshIDLength: 4,\n\tidlength: 16,\n\ttickerdelay: milliseconds * seconds,\n};\n\nexport default config;\n","import { rndString } from '@laufire/utils/random';\nimport config from '../core/config';\n\nconst { idlength } = config;\n\nconst getTodo = (text) => ({\n\tid: rndString(idlength),\n\ttext: text,\n\tcompleted: false,\n});\n\nconst addTodo = (todos, text) => todos.concat(getTodo(text));\n\nconst toggleTodo = (todos, data) => todos.map((todo) => (todo.id !== data.id\n\t? todo\n\t:\t{\n\t\t...todo,\n\t\tcompleted: !data.completed,\n\t}\n));\n\nconst removeTodo = (todos, todo) =>\n\ttodos.filter((current) => current.id !== todo.id);\n\nconst toggleAllTodo = (todos, isComplete) => todos.map((todo) => ({\n\t...todo,\n\tcompleted: isComplete,\n}));\n\nconst Filters = {\n\tall: () => true,\n\tactive: (todo) => !todo.completed,\n\tcompleted: (todo) => todo.completed,\n};\n\nconst getTodoCount = (todos) => todos.filter(Filters.active).length;\n\nconst clearButton = (todos) => todos.filter(Filters.active);\n\nconst getNoCompletedCount = (todos) => todos.length;\n\nconst getCompletedCount = (todos) => todos.filter(Filters.completed).length;\n\nconst filterTodos = (todos, filter) => todos.filter(Filters[filter]);\n\nconst hasNoTodos = (todos) => getTodoCount(todos) === 0;\n\nconst editTodo = (\n\ttodos, editing, text\n) =>\n\ttodos.map((todo) => (todo.id !== editing.id\n\t\t? todo\n\t\t: {\n\t\t\t...todo,\n\t\t\ttext,\n\t\t}\n\t));\n\nconst TodoManager = {\n\taddTodo,\n\ttoggleTodo,\n\tremoveTodo,\n\ttoggleAllTodo,\n\tgetTodoCount,\n\tclearButton,\n\tgetNoCompletedCount,\n\tfilterTodos,\n\thasNoTodos,\n\tgetCompletedCount,\n\teditTodo,\n};\n\nexport default TodoManager;\n","import TaskManager from '../services/taskManager';\nimport TodoManager from '../services/todoManager';\n\nconst updateInputValue = (dummy, input) => ({\n\tinput,\n});\n\nconst addTodo = ({ state }) => ({\n\ttodos: TodoManager.addTodo(state.todos, state.input),\n});\n\nconst toggleTodo = ({ state }, todo) => ({\n\ttodos: TodoManager.toggleTodo(state.todos, todo),\n});\n\nconst removeTodo = ({ state }, todo) => ({\n\ttodos: TodoManager.removeTodo(state.todos, todo),\n});\n\nconst toggleAllTodo = (context, isComplete) => ({\n\ttodos: TodoManager.toggleAllTodo(context.state.todos, isComplete),\n});\n\nconst clearButton = ({ state }) => ({\n\ttodos: TodoManager.clearButton(state.todos),\n});\n\nconst setFilter = (context, filter) => ({\n\tfilter,\n});\n\nconst setEditing = (context, todo) => ({\n\tediting: todo,\n\tinput: todo.text,\n});\n\nconst editTodo = ({ state }) => ({\n\tinput: '',\n\tediting: null,\n\ttodos: TodoManager.editTodo(\n\t\tstate.todos, state.editing, state.input\n\t),\n});\n\nconst addTask = (context, task) => ({\n\ttasks: TaskManager.addTask(context.state.tasks, task),\n});\n\nconst removeTask = (context, task) => ({\n\ttasks: TaskManager.removeTask(context.state.tasks, task),\n});\n\nconst addTaskToTodo = (context, task) => ({\n\ttodos: TodoManager.addTodo(context.state.todos, task.text),\n});\n\nconst actions = {\n\tupdateInputValue,\n\taddTodo,\n\ttoggleTodo,\n\tremoveTodo,\n\ttoggleAllTodo,\n\tclearButton,\n\tsetFilter,\n\teditTodo,\n\tsetEditing,\n\taddTask,\n\tremoveTask,\n\taddTaskToTodo,\n};\n\nexport default actions;\n","import { rndString } from '@laufire/utils/random';\nimport config from './config';\n\nconst { refreshIDLength } = config;\n\nconst seed = {\n\trefreshID: rndString(refreshIDLength),\n\tinput: '',\n\ttodos: [],\n\tfilter: 'all',\n\tediting: null,\n\ttasks: [],\n};\n\nexport default seed;\n","import actions from './actions';\nimport config from './config';\nimport seed from './seed';\n\nconst context = {\n\tactions,\n\tconfig,\n\tseed,\n};\n\nexport default context;\n","import { rndString } from '@laufire/utils/random';\nimport config from '../core/config';\nimport context from '../core/context';\n\nconst getTask = (Task) => ({\n\tid: rndString(config.idlength),\n\ttext: Task,\n});\n\nconst removeTask = (tasks, task) =>\n\ttasks.filter((data) => data.id !== task.id);\n\nconst addTask = (tasks, task) =>\n\ttasks.concat(getTask(task));\n\nconst init = () => {\n\tcontext.actions.addTask('Task 1');\n\tcontext.actions.addTask('Task 2');\n\tcontext.actions.addTask('Task 3');\n};\n\nconst TaskManager = {\n\tgetTask,\n\tremoveTask,\n\tinit,\n\taddTask,\n};\n\nexport default TaskManager;\n","import { React } from 'react';\nimport context from '../../core/context';\n\nconst AddButton = (task) =>\n\t<button\n\t\tonClick={ () => {\n\t\t\tcontext.actions.addTaskToTodo(task);\n\t\t\tcontext.actions.removeTask(task);\n\t\t} }\n\t>+\n\t</button>;\n\nconst Task = (task) => {\n\tconst { id, text } = task;\n\tconst removeButton = (todo) =>\n\t\t<button onClick={ () => context.actions.removeTask(todo) }>X</button>;\n\n\treturn (\n\t\t<div key={ id } className=\"task\">\n\t\t\t<span>{ text }</span>\n\t\t\t<span>{ AddButton(task)}</span>\n\t\t\t<span>{ removeButton(task) }</span>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import context from '../../core/context';\nimport Task from './task';\nimport { React } from 'react';\n\nconst TaskList = () => {\n\tconst { tasks } = context.state;\n\n\treturn (\n\t\t<div>\n\t\t\t{tasks.map(Task)}\n\t\t</div>\n\t);\n};\n\nexport default TaskList;\n","import TaskList from './taskList';\nimport { React } from 'react';\n\nconst TaskPane = () =>\n\t<div className= \"pane taskpane\">\n\t\t<h3>Task</h3>\n\t\t<div> { TaskList() } </div>\n\t</div>;\n\nexport default TaskPane;\n","import { React } from 'react';\nimport context from '../../core/context';\n\nconst AddTodo = () =>\n\t<button\n\t\tclassName=\"AddButton\"\n\t\tdisabled={ context.state.input === '' }\n\t\tonClick={ context.actions.addTodo }\n\t>+</button>;\n\nexport default AddTodo;\n","import context from '../../core/context';\nimport { React } from 'react';\n\nconst EditButton = () =>\n\t<button\n\t\tdisabled={ context.state.input === '' }\n\t\tonClick={ context.actions.editTodo }\n\t>\tOK</button>;\n\nexport default EditButton;\n","import context from '../../core/context';\nimport AddTodo from './addTodo';\nimport EditButton from './editButton';\n\nconst ActionButton = () => (context.state.editing\n\t? EditButton()\n\t: AddTodo());\n\nexport default ActionButton;\n","import { React } from 'react';\nimport context from '../../core/context';\nimport TodoManager from '../../services/todoManager';\n\nconst ClearButton = () => {\n\tconst { todos } = context.state;\n\tconst hasNoTodos = TodoManager.getCompletedCount(todos) === 0;\n\n\treturn hasNoTodos\n\t\t? null\n\t\t: <button onClick={ context.actions.clearButton }>ClearButton</button>;\n};\n\nexport default ClearButton;\n","/* eslint-disable indent */\nimport context from '../../core/context';\nimport { React } from 'react';\nimport TodoManager from '../../services/todoManager';\n\nconst FilterButton = (filter) => {\n\tconst { todos } = context.state;\n\tconst notodos = TodoManager.getNoCompletedCount(todos) === 0;\n\n\treturn notodos\n\t\t? null\n\t\t: <button\n\t\t\t\tclassName=\"FilterBtn\"\n\t\t\t\tonClick={ () => context.actions.setFilter(filter) }\n\t\t\t\t>\n\t\t\t{filter} </button>;\n};\n\nexport default FilterButton;\n","import { React } from 'react';\nimport FilterButton from './filterButton';\nconst filters = ['all', 'active', 'completed'];\n\nconst FilterBar = () =>\n\t<div className=\"Btnspacing\"> {filters.map(FilterButton)} </div>;\n\nexport default FilterBar;\n","import { React } from 'react';\nimport context from '../../core/context';\n\nconst actionKeys = {\n\tEnter: () => context.actions.addTodo(),\n\tEscape: () => context.actions.updateInputValue(''),\n};\n\nconst TodoInput = () =>\n\t<input\n\t\tvalue={ context.state.input }\n\t\tonChange={ (evt) => context.actions.updateInputValue(evt.target.value) }\n\t\tonKeyUp={ (evt) => actionKeys[evt.code] && actionKeys[evt.code]() }\n\t/>;\n\nexport default TodoInput;\n","import context from '../../core/context';\nimport { React } from 'react';\nconst sharedStyle = {\n\theight: '350px',\n};\n\nconst completedStyle = {\n\t...sharedStyle,\n\tcolor: 'black',\n};\n\nconst activeStyle = {\n\t...sharedStyle,\n\tcolor: 'navy',\n};\n\nconst Todo = (todo) => {\n\tconst { id, text, completed } = todo;\n\tconst style = completed ? completedStyle : activeStyle;\n\n\treturn <div key={ id } style={ style }>\n\t\t<span>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={ completed }\n\t\t\t\tonChange={ () => context.actions.toggleTodo(todo) }\n\t\t\t/>\n\t\t</span>\n\t\t<span onClick={ () => context.actions.setEditing(todo) }>{text}</span>\n\t\t<span>\n\t\t\t<button\n\t\t\t\tonClick={ () => context.actions.removeTodo(todo) }\n\t\t\t>X\n\t\t\t</button>\n\t\t</span>\n\t</div>;\n};\n\nexport default Todo;\n","import context from '../../core/context';\nimport Todo from './todo';\nimport { React } from 'react';\nimport TodoManager from '../../services/todoManager';\n\nconst TodoList = () => {\n\tconst { todos, filter } = context.state;\n\tconst filteredTodos = TodoManager.filterTodos(todos, filter);\n\n\treturn <div>{filteredTodos.map(Todo)}</div>;\n};\n\nexport default TodoList;\n","/* eslint-disable indent */\nimport context from '../../core/context';\nimport { React } from 'react';\nimport TodoManager from '../../services/todoManager';\n\nconst Toggletodo = () => {\n\tconst isChecked = TodoManager.getTodoCount(context.state.todos) === 0;\n\tconst notodos = TodoManager.hasNoTodos(context.state.todos) === 0;\n\n\treturn notodos\n\t\t? null\n\t\t:\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={ isChecked }\n\t\t\t\tonChange={ () => context.actions.toggleAllTodo(!isChecked) }\n\t\t\t\t/>;\n};\n\nexport default Toggletodo;\n","import ActionButton from './actionButton';\nimport ClearButton from './clearButton';\nimport FilterBar from './filterBar';\nimport TodoInput from './todoInput';\nimport TodoList from './todoList';\nimport Toggletodo from './toggletodo';\nimport { React } from 'react';\n\nconst TodoPane = () =>\n\t<div className=\"pane todopane\">\n\t\t<h3> TODO </h3>\n\t\t<div>\n\t\t\t{Toggletodo() }\n\t\t\t{ TodoInput() }\n\t\t\t{ActionButton()}\n\t\t</div>\n\t\t<div>{TodoList()}</div>\n\t\t<div>{ClearButton()}</div>\n\t\t<div>{FilterBar()}</div>\n\t</div>;\n\nexport default TodoPane;\n","import { React, useEffect } from 'react';\nimport './App.css';\n// import SampleService from './services/sample';\nimport TaskManager from './services/taskManager';\n// import AddTodo from './components/addTodo';\n// import TodoInput from './components/todoInput';\n// import context from './core/context';\n// import TodoList from './components/todoList';\n// import Toggletodo from './components/toggletodo';\n// import ClearButton from './components/clearButton';\n// import FilterBar from './components/filterBar';\n// import EditButton from './components/editButton';\n// import ActionButton from './components/actionButton.js';\nimport TaskPane from './components/taskpane';\nimport TodoPane from './components/todopane';\n// import Ticker from './services/ticker';\n\nconst App = () => {\n\tuseEffect(TaskManager.init, []);\n\t// useEffect(Ticker.start, []);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div>{ TaskPane() }</div>\n\t\t\t<div>{ TodoPane() }</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport updateContext from '@laufire/resist';\nimport './index.css';\nimport App from './App';\nimport context from './core/context';\n\nconst Entry = () => {\n\tconst [state, setState] = useState(context.seed);\n\n\tupdateContext(context, { state, setState });\n\n\treturn App(context);\n};\n\nReactDOM.render(<React.StrictMode>\n\t<Entry/>\n</React.StrictMode>,\ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}